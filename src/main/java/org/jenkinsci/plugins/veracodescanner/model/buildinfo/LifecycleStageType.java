//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.07.17 at 12:36:38 PM CDT 
//


package org.jenkinsci.plugins.veracodescanner.model.buildinfo;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for LifecycleStageType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="LifecycleStageType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Not Specified"/>
 *     &lt;enumeration value="In Development (pre-Alpha)"/>
 *     &lt;enumeration value="Internal or Alpha Testing"/>
 *     &lt;enumeration value="External or Beta Testing"/>
 *     &lt;enumeration value="Deployed (In production and actively developed)"/>
 *     &lt;enumeration value="Maintenance (only bug fixes)"/>
 *     &lt;enumeration value="Cannot Disclose"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "LifecycleStageType")
@XmlEnum
public enum LifecycleStageType {

    @XmlEnumValue("Not Specified")
    NOT_SPECIFIED("Not Specified"),
    @XmlEnumValue("In Development (pre-Alpha)")
    IN_DEVELOPMENT_PRE_ALPHA("In Development (pre-Alpha)"),
    @XmlEnumValue("Internal or Alpha Testing")
    INTERNAL_OR_ALPHA_TESTING("Internal or Alpha Testing"),
    @XmlEnumValue("External or Beta Testing")
    EXTERNAL_OR_BETA_TESTING("External or Beta Testing"),
    @XmlEnumValue("Deployed (In production and actively developed)")
    DEPLOYED_IN_PRODUCTION_AND_ACTIVELY_DEVELOPED("Deployed (In production and actively developed)"),
    @XmlEnumValue("Maintenance (only bug fixes)")
    MAINTENANCE_ONLY_BUG_FIXES("Maintenance (only bug fixes)"),
    @XmlEnumValue("Cannot Disclose")
    CANNOT_DISCLOSE("Cannot Disclose");
    private final String value;

    LifecycleStageType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static LifecycleStageType fromValue(String v) {
        for (LifecycleStageType c: LifecycleStageType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
