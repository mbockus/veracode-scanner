//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.07.17 at 12:36:38 PM CDT 
//


package org.jenkinsci.plugins.veracodescanner.model.buildinfo;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for StatusType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="StatusType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Incomplete"/>
 *     &lt;enumeration value="Not Submitted to Engine"/>
 *     &lt;enumeration value="Submitted to Engine"/>
 *     &lt;enumeration value="Scan Errors"/>
 *     &lt;enumeration value="Scan In Process"/>
 *     &lt;enumeration value="Scan Cancelled"/>
 *     &lt;enumeration value="Scan Internal Error"/>
 *     &lt;enumeration value="Pending Internal Review"/>
 *     &lt;enumeration value="Results Ready"/>
 *     &lt;enumeration value="Pre-Scan Submitted"/>
 *     &lt;enumeration value="Pre-Scan Failed"/>
 *     &lt;enumeration value="Pre-Scan Success"/>
 *     &lt;enumeration value="No Modules Defined"/>
 *     &lt;enumeration value="Pending Vendor Confirmation"/>
 *     &lt;enumeration value="Vendor Reviewing"/>
 *     &lt;enumeration value="Pre-Scan Cancelled"/>
 *     &lt;enumeration value="Scan On Hold"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "StatusType")
@XmlEnum
public enum StatusType {

    @XmlEnumValue("Incomplete")
    INCOMPLETE("Incomplete"),
    @XmlEnumValue("Not Submitted to Engine")
    NOT_SUBMITTED_TO_ENGINE("Not Submitted to Engine"),
    @XmlEnumValue("Submitted to Engine")
    SUBMITTED_TO_ENGINE("Submitted to Engine"),
    @XmlEnumValue("Scan Errors")
    SCAN_ERRORS("Scan Errors"),
    @XmlEnumValue("Scan In Process")
    SCAN_IN_PROCESS("Scan In Process"),
    @XmlEnumValue("Scan Cancelled")
    SCAN_CANCELLED("Scan Cancelled"),
    @XmlEnumValue("Scan Internal Error")
    SCAN_INTERNAL_ERROR("Scan Internal Error"),
    @XmlEnumValue("Pending Internal Review")
    PENDING_INTERNAL_REVIEW("Pending Internal Review"),
    @XmlEnumValue("Results Ready")
    RESULTS_READY("Results Ready"),
    @XmlEnumValue("Pre-Scan Submitted")
    PRE_SCAN_SUBMITTED("Pre-Scan Submitted"),
    @XmlEnumValue("Pre-Scan Failed")
    PRE_SCAN_FAILED("Pre-Scan Failed"),
    @XmlEnumValue("Pre-Scan Success")
    PRE_SCAN_SUCCESS("Pre-Scan Success"),
    @XmlEnumValue("No Modules Defined")
    NO_MODULES_DEFINED("No Modules Defined"),
    @XmlEnumValue("Pending Vendor Confirmation")
    PENDING_VENDOR_CONFIRMATION("Pending Vendor Confirmation"),
    @XmlEnumValue("Vendor Reviewing")
    VENDOR_REVIEWING("Vendor Reviewing"),
    @XmlEnumValue("Pre-Scan Cancelled")
    PRE_SCAN_CANCELLED("Pre-Scan Cancelled"),
    @XmlEnumValue("Scan On Hold")
    SCAN_ON_HOLD("Scan On Hold");
    private final String value;

    StatusType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static StatusType fromValue(String v) {
        for (StatusType c: StatusType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
